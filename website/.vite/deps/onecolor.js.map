{
  "version": 3,
  "sources": ["../../node_modules/onecolor/lib/color.js", "../../node_modules/onecolor/lib/XYZ.js", "../../node_modules/onecolor/lib/LAB.js", "../../node_modules/onecolor/lib/HSV.js", "../../node_modules/onecolor/lib/HSL.js", "../../node_modules/onecolor/lib/CMYK.js", "../../node_modules/onecolor/lib/plugins/namedColors.js", "../../node_modules/onecolor/lib/plugins/clearer.js", "../../node_modules/onecolor/lib/plugins/luminance.js", "../../node_modules/onecolor/lib/plugins/contrast.js", "../../node_modules/onecolor/lib/plugins/darken.js", "../../node_modules/onecolor/lib/plugins/desaturate.js", "../../node_modules/onecolor/lib/plugins/grayscale.js", "../../node_modules/onecolor/lib/plugins/isDark.js", "../../node_modules/onecolor/lib/plugins/isLight.js", "../../node_modules/onecolor/lib/plugins/lighten.js", "../../node_modules/onecolor/lib/plugins/mix.js", "../../node_modules/onecolor/lib/plugins/negate.js", "../../node_modules/onecolor/lib/plugins/opaquer.js", "../../node_modules/onecolor/lib/plugins/rotate.js", "../../node_modules/onecolor/lib/plugins/saturate.js", "../../node_modules/onecolor/lib/plugins/toAlpha.js", "../../node_modules/onecolor/index.js"],
  "sourcesContent": ["var installedColorSpaces = [];\nvar undef = function (obj) {\n  return typeof obj === 'undefined';\n};\nvar channelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)(%|deg)?\\s*/;\nvar percentageChannelRegExp = /\\s*(\\.\\d+|100|\\d?\\d(?:\\.\\d+)?)%\\s*/;\nvar cssColorRegExp = new RegExp(\n  '^(rgb|hsl|hsv)a?' +\n    '\\\\(' +\n    channelRegExp.source +\n    '[, ]' +\n    channelRegExp.source +\n    '[, ]' +\n    channelRegExp.source +\n    '(?:[,/]' +\n    channelRegExp.source +\n    ')?' +\n    '\\\\)$',\n  'i'\n);\n\nfunction divisor(unit, channelNumber, hasHue) {\n  if (unit === '%') {\n    return 100;\n  } else if (unit === 'deg' || (hasHue && channelNumber === 0)) {\n    return 360;\n  } else if (!unit) {\n    return 255;\n  }\n}\n\nfunction color(obj) {\n  if (Array.isArray(obj)) {\n    if (typeof obj[0] === 'string' && typeof color[obj[0]] === 'function') {\n      // Assumed array from .toJSON()\n      return new color[obj[0]](obj.slice(1, obj.length));\n    } else if (obj.length === 4) {\n      // Assumed 4 element int RGB array from canvas with all channels [0;255]\n      return new color.RGB(\n        obj[0] / 255,\n        obj[1] / 255,\n        obj[2] / 255,\n        obj[3] / 255\n      );\n    }\n  } else if (typeof obj === 'string') {\n    var lowerCased = obj.toLowerCase();\n    if (color.namedColors[lowerCased]) {\n      obj = '#' + color.namedColors[lowerCased];\n    }\n    if (lowerCased === 'transparent') {\n      obj = 'rgba(0,0,0,0)';\n    }\n    // Test for CSS rgb(....) string\n    var matchCssSyntax = obj.match(cssColorRegExp);\n    if (matchCssSyntax) {\n      var colorSpaceName = matchCssSyntax[1].toUpperCase();\n      var hasHue = colorSpaceName[0] === 'H';\n      if (undef(color[colorSpaceName])) {\n        throw new Error('color.' + colorSpaceName + ' is not installed.');\n      }\n\n      let alpha = undef(matchCssSyntax[8]) ? 1 : undefined;\n      if (alpha === undefined) {\n        if (matchCssSyntax[9] === '%') {\n          alpha = parseFloat(matchCssSyntax[8]) / 100;\n        } else {\n          alpha = parseFloat(matchCssSyntax[8]);\n        }\n      }\n      return new color[colorSpaceName](\n        parseFloat(matchCssSyntax[2]) / divisor(matchCssSyntax[3], 0, hasHue),\n        parseFloat(matchCssSyntax[4]) / divisor(matchCssSyntax[5], 1, hasHue),\n        parseFloat(matchCssSyntax[6]) / divisor(matchCssSyntax[7], 2, hasHue),\n        alpha\n      );\n    }\n    // Assume hex syntax\n    if (obj.length < 6) {\n      // Allow CSS shorthand\n      obj = obj.replace(\n        /^#?([0-9a-f])([0-9a-f])([0-9a-f])([0-9a-f])?$/i,\n        '$1$1$2$2$3$3$4$4'\n      );\n    }\n    // Split obj into the red, green, blue, and optionally alpha component\n    var hexMatch = obj.match(\n      /^#?([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])?$/i\n    );\n\n    if (hexMatch) {\n      return new color.RGB(\n        parseInt(hexMatch[1], 16) / 255,\n        parseInt(hexMatch[2], 16) / 255,\n        parseInt(hexMatch[3], 16) / 255,\n        hexMatch[4] ? parseInt(hexMatch[4], 16) / 255 : 1\n      );\n    }\n\n    // No match so far. Lets try the less likely ones\n    if (color.CMYK) {\n      var cmykMatch = obj.match(\n        new RegExp(\n          '^cmyk' +\n            '\\\\(' +\n            percentageChannelRegExp.source +\n            ',' +\n            percentageChannelRegExp.source +\n            ',' +\n            percentageChannelRegExp.source +\n            ',' +\n            percentageChannelRegExp.source +\n            '\\\\)$',\n          'i'\n        )\n      );\n      if (cmykMatch) {\n        return new color.CMYK(\n          parseFloat(cmykMatch[1]) / 100,\n          parseFloat(cmykMatch[2]) / 100,\n          parseFloat(cmykMatch[3]) / 100,\n          parseFloat(cmykMatch[4]) / 100\n        );\n      }\n    }\n  } else if (typeof obj === 'object' && obj.isColor) {\n    return obj;\n  }\n  return false;\n}\n\ncolor.namedColors = {};\n\ncolor.installColorSpace = function (colorSpaceName, propertyNames, config) {\n  color[colorSpaceName] = function (a1) {\n    // ...\n    var args = Array.isArray(a1) ? a1 : arguments;\n    propertyNames.forEach(function (propertyName, i) {\n      var propertyValue = args[i];\n      if (propertyName === 'alpha') {\n        this._alpha =\n          isNaN(propertyValue) || propertyValue > 1\n            ? 1\n            : propertyValue < 0\n            ? 0\n            : propertyValue;\n      } else {\n        if (isNaN(propertyValue)) {\n          throw new Error(\n            '[' +\n              colorSpaceName +\n              ']: Invalid color: (' +\n              propertyNames.join(',') +\n              ')'\n          );\n        }\n        if (propertyName === 'hue') {\n          this._hue =\n            propertyValue < 0\n              ? propertyValue - Math.floor(propertyValue)\n              : propertyValue % 1;\n        } else {\n          this['_' + propertyName] =\n            propertyValue < 0 ? 0 : propertyValue > 1 ? 1 : propertyValue;\n        }\n      }\n    }, this);\n  };\n  color[colorSpaceName].propertyNames = propertyNames;\n\n  var prototype = color[colorSpaceName].prototype;\n\n  ['valueOf', 'hex', 'hexa', 'css', 'cssa'].forEach(function (methodName) {\n    prototype[methodName] =\n      prototype[methodName] ||\n      (colorSpaceName === 'RGB'\n        ? prototype.hex\n        : function () {\n            return this.rgb()[methodName]();\n          });\n  });\n\n  prototype.isColor = true;\n\n  prototype.equals = function (otherColor, epsilon) {\n    if (undef(epsilon)) {\n      epsilon = 1e-10;\n    }\n\n    otherColor = otherColor[colorSpaceName.toLowerCase()]();\n\n    for (var i = 0; i < propertyNames.length; i = i + 1) {\n      if (\n        Math.abs(\n          this['_' + propertyNames[i]] - otherColor['_' + propertyNames[i]]\n        ) > epsilon\n      ) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  prototype.toJSON = function () {\n    return [colorSpaceName].concat(\n      propertyNames.map(function (propertyName) {\n        return this['_' + propertyName];\n      }, this)\n    );\n  };\n\n  for (var propertyName in config) {\n    if (Object.prototype.hasOwnProperty.call(config, propertyName)) {\n      var matchFromColorSpace = propertyName.match(/^from(.*)$/);\n      if (matchFromColorSpace) {\n        color[matchFromColorSpace[1].toUpperCase()].prototype[\n          colorSpaceName.toLowerCase()\n        ] = config[propertyName];\n      } else {\n        prototype[propertyName] = config[propertyName];\n      }\n    }\n  }\n\n  // It is pretty easy to implement the conversion to the same color space:\n  prototype[colorSpaceName.toLowerCase()] = function () {\n    return this;\n  };\n  prototype.toString = function () {\n    return (\n      '[' +\n      colorSpaceName +\n      ' ' +\n      propertyNames\n        .map(function (propertyName) {\n          return this['_' + propertyName];\n        }, this)\n        .join(', ') +\n      ']'\n    );\n  };\n\n  // Generate getters and setters\n  propertyNames.forEach(function (propertyName) {\n    var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n    prototype[propertyName] = prototype[shortName] = function (value, isDelta) {\n      // Simple getter mode: color.red()\n      if (typeof value === 'undefined') {\n        return this['_' + propertyName];\n      } else if (isDelta) {\n        // Adjuster: color.red(+.2, true)\n        return new this.constructor(\n          propertyNames.map(function (otherPropertyName) {\n            return (\n              this['_' + otherPropertyName] +\n              (propertyName === otherPropertyName ? value : 0)\n            );\n          }, this)\n        );\n      } else {\n        // Setter: color.red(.2);\n        return new this.constructor(\n          propertyNames.map(function (otherPropertyName) {\n            return propertyName === otherPropertyName\n              ? value\n              : this['_' + otherPropertyName];\n          }, this)\n        );\n      }\n    };\n  });\n\n  function installForeignMethods(targetColorSpaceName, sourceColorSpaceName) {\n    var obj = {};\n    obj[sourceColorSpaceName.toLowerCase()] = function () {\n      return this.rgb()[sourceColorSpaceName.toLowerCase()]();\n    };\n    color[sourceColorSpaceName].propertyNames.forEach(function (propertyName) {\n      var shortName = propertyName === 'black' ? 'k' : propertyName.charAt(0);\n      obj[propertyName] = obj[shortName] = function (value, isDelta) {\n        return this[sourceColorSpaceName.toLowerCase()]()[propertyName](\n          value,\n          isDelta\n        );\n      };\n    });\n    for (var prop in obj) {\n      if (\n        Object.prototype.hasOwnProperty.call(obj, prop) &&\n        color[targetColorSpaceName].prototype[prop] === undefined\n      ) {\n        color[targetColorSpaceName].prototype[prop] = obj[prop];\n      }\n    }\n  }\n\n  installedColorSpaces.forEach(function (otherColorSpaceName) {\n    installForeignMethods(colorSpaceName, otherColorSpaceName);\n    installForeignMethods(otherColorSpaceName, colorSpaceName);\n  });\n\n  installedColorSpaces.push(colorSpaceName);\n  return color;\n};\n\ncolor.pluginList = [];\n\ncolor.use = function (plugin) {\n  if (color.pluginList.indexOf(plugin) === -1) {\n    this.pluginList.push(plugin);\n    plugin(color);\n  }\n  return color;\n};\n\ncolor.installMethod = function (name, fn) {\n  installedColorSpaces.forEach(function (colorSpace) {\n    color[colorSpace].prototype[name] = fn;\n  });\n  return this;\n};\n\ncolor.installColorSpace('RGB', ['red', 'green', 'blue', 'alpha'], {\n  hex: function () {\n    var hexString = (\n      Math.round(255 * this._red) * 0x10000 +\n      Math.round(255 * this._green) * 0x100 +\n      Math.round(255 * this._blue)\n    ).toString(16);\n    return '#' + '00000'.substr(0, 6 - hexString.length) + hexString;\n  },\n\n  hexa: function () {\n    var alphaString = Math.round(this._alpha * 255).toString(16);\n    return this.hex() + '00'.substr(0, 2 - alphaString.length) + alphaString;\n  },\n\n  css: function () {\n    return (\n      'rgb(' +\n      Math.round(255 * this._red) +\n      ',' +\n      Math.round(255 * this._green) +\n      ',' +\n      Math.round(255 * this._blue) +\n      ')'\n    );\n  },\n\n  cssa: function () {\n    return (\n      'rgba(' +\n      Math.round(255 * this._red) +\n      ',' +\n      Math.round(255 * this._green) +\n      ',' +\n      Math.round(255 * this._blue) +\n      ',' +\n      this._alpha +\n      ')'\n    );\n  },\n});\n\nmodule.exports = color;\n", "module.exports = function XYZ(color) {\n  color.installColorSpace('XYZ', ['x', 'y', 'z', 'alpha'], {\n    fromRgb: function () {\n      // http://www.easyrgb.com/index.php?X=MATH&H=02#text2\n      var convert = function (channel) {\n        return channel > 0.04045\n          ? Math.pow((channel + 0.055) / 1.055, 2.4)\n          : channel / 12.92;\n      };\n      var r = convert(this._red);\n      var g = convert(this._green);\n      var b = convert(this._blue);\n\n      // Reference white point sRGB D65:\n      // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n      return new color.XYZ(\n        r * 0.4124564 + g * 0.3575761 + b * 0.1804375,\n        r * 0.2126729 + g * 0.7151522 + b * 0.072175,\n        r * 0.0193339 + g * 0.119192 + b * 0.9503041,\n        this._alpha\n      );\n    },\n\n    rgb: function () {\n      // http://www.easyrgb.com/index.php?X=MATH&H=01#text1\n      var x = this._x;\n      var y = this._y;\n      var z = this._z;\n      var convert = function (channel) {\n        return channel > 0.0031308\n          ? 1.055 * Math.pow(channel, 1 / 2.4) - 0.055\n          : 12.92 * channel;\n      };\n\n      // Reference white point sRGB D65:\n      // http://www.brucelindbloom.com/index.html?Eqn_RGB_XYZ_Matrix.html\n      return new color.RGB(\n        convert(x * 3.2404542 + y * -1.5371385 + z * -0.4985314),\n        convert(x * -0.969266 + y * 1.8760108 + z * 0.041556),\n        convert(x * 0.0556434 + y * -0.2040259 + z * 1.0572252),\n        this._alpha\n      );\n    },\n\n    lab: function () {\n      // http://www.easyrgb.com/index.php?X=MATH&H=07#text7\n      var convert = function (channel) {\n        return channel > 0.008856\n          ? Math.pow(channel, 1 / 3)\n          : 7.787037 * channel + 4 / 29;\n      };\n      var x = convert(this._x / 95.047);\n      var y = convert(this._y / 100.0);\n      var z = convert(this._z / 108.883);\n\n      return new color.LAB(\n        116 * y - 16,\n        500 * (x - y),\n        200 * (y - z),\n        this._alpha\n      );\n    },\n  });\n};\n", "module.exports = function LAB(color) {\n  color.use(require('./XYZ.js'));\n\n  color.installColorSpace('LAB', ['l', 'a', 'b', 'alpha'], {\n    fromRgb: function () {\n      return this.xyz().lab();\n    },\n\n    rgb: function () {\n      return this.xyz().rgb();\n    },\n\n    xyz: function () {\n      // http://www.easyrgb.com/index.php?X=MATH&H=08#text8\n      var convert = function (channel) {\n        var pow = Math.pow(channel, 3);\n        return pow > 0.008856 ? pow : (channel - 16 / 116) / 7.87;\n      };\n      var y = (this._l + 16) / 116;\n      var x = this._a / 500 + y;\n      var z = y - this._b / 200;\n\n      return new color.XYZ(\n        convert(x) * 95.047,\n        convert(y) * 100.0,\n        convert(z) * 108.883,\n        this._alpha\n      );\n    },\n  });\n};\n", "module.exports = function HSV(color) {\n  color.installColorSpace('HSV', ['hue', 'saturation', 'value', 'alpha'], {\n    rgb: function () {\n      var hue = this._hue;\n      var saturation = this._saturation;\n      var value = this._value;\n      var i = Math.min(5, Math.floor(hue * 6));\n      var f = hue * 6 - i;\n      var p = value * (1 - saturation);\n      var q = value * (1 - f * saturation);\n      var t = value * (1 - (1 - f) * saturation);\n      var red;\n      var green;\n      var blue;\n      switch (i) {\n        case 0:\n          red = value;\n          green = t;\n          blue = p;\n          break;\n        case 1:\n          red = q;\n          green = value;\n          blue = p;\n          break;\n        case 2:\n          red = p;\n          green = value;\n          blue = t;\n          break;\n        case 3:\n          red = p;\n          green = q;\n          blue = value;\n          break;\n        case 4:\n          red = t;\n          green = p;\n          blue = value;\n          break;\n        case 5:\n          red = value;\n          green = p;\n          blue = q;\n          break;\n      }\n      return new color.RGB(red, green, blue, this._alpha);\n    },\n\n    hsl: function () {\n      var l = (2 - this._saturation) * this._value;\n      var sv = this._saturation * this._value;\n      var svDivisor = l <= 1 ? l : 2 - l;\n      var saturation;\n\n      // Avoid division by zero when lightness approaches zero:\n      if (svDivisor < 1e-9) {\n        saturation = 0;\n      } else {\n        saturation = sv / svDivisor;\n      }\n      return new color.HSL(this._hue, saturation, l / 2, this._alpha);\n    },\n\n    fromRgb: function () {\n      // Becomes one.color.RGB.prototype.hsv\n      var red = this._red;\n      var green = this._green;\n      var blue = this._blue;\n      var max = Math.max(red, green, blue);\n      var min = Math.min(red, green, blue);\n      var delta = max - min;\n      var hue;\n      var saturation = max === 0 ? 0 : delta / max;\n      var value = max;\n      if (delta === 0) {\n        hue = 0;\n      } else {\n        switch (max) {\n          case red:\n            hue = (green - blue) / delta / 6 + (green < blue ? 1 : 0);\n            break;\n          case green:\n            hue = (blue - red) / delta / 6 + 1 / 3;\n            break;\n          case blue:\n            hue = (red - green) / delta / 6 + 2 / 3;\n            break;\n        }\n      }\n      return new color.HSV(hue, saturation, value, this._alpha);\n    },\n  });\n};\n", "module.exports = function HSL(color) {\n  color.use(require('./HSV'));\n\n  color.installColorSpace('HSL', ['hue', 'saturation', 'lightness', 'alpha'], {\n    hsv: function () {\n      // Algorithm adapted from http://wiki.secondlife.com/wiki/Color_conversion_scripts\n      var l = this._lightness * 2;\n      var s = this._saturation * (l <= 1 ? l : 2 - l);\n      var saturation;\n\n      // Avoid division by zero when l + s is very small (approaching black):\n      if (l + s < 1e-9) {\n        saturation = 0;\n      } else {\n        saturation = (2 * s) / (l + s);\n      }\n\n      return new color.HSV(this._hue, saturation, (l + s) / 2, this._alpha);\n    },\n\n    rgb: function () {\n      return this.hsv().rgb();\n    },\n\n    fromRgb: function () {\n      // Becomes one.color.RGB.prototype.hsv\n      return this.hsv().hsl();\n    },\n  });\n};\n", "module.exports = function CMYK(color) {\n  color.installColorSpace(\n    'CMYK',\n    ['cyan', 'magenta', 'yellow', 'black', 'alpha'],\n    {\n      rgb: function () {\n        return new color.RGB(\n          1 - this._cyan * (1 - this._black) - this._black,\n          1 - this._magenta * (1 - this._black) - this._black,\n          1 - this._yellow * (1 - this._black) - this._black,\n          this._alpha\n        );\n      },\n\n      fromRgb: function () {\n        // Becomes one.color.RGB.prototype.cmyk\n        // Adapted from http://www.javascripter.net/faq/rgb2cmyk.htm\n        var red = this._red;\n        var green = this._green;\n        var blue = this._blue;\n        var cyan = 1 - red;\n        var magenta = 1 - green;\n        var yellow = 1 - blue;\n        var black = 1;\n        if (red || green || blue) {\n          black = Math.min(cyan, Math.min(magenta, yellow));\n          cyan = (cyan - black) / (1 - black);\n          magenta = (magenta - black) / (1 - black);\n          yellow = (yellow - black) / (1 - black);\n        } else {\n          black = 1;\n        }\n        return new color.CMYK(cyan, magenta, yellow, black, this._alpha);\n      },\n    }\n  );\n};\n", "module.exports = function namedColors(color) {\n  color.namedColors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '0ff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000',\n    blanchedalmond: 'ffebcd',\n    blue: '00f',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '0ff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgrey: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkslategrey: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dimgrey: '696969',\n    dodgerblue: '1e90ff',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'f0f',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    grey: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgray: 'd3d3d3',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslategray: '789',\n    lightslategrey: '789',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '0f0',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'f0f',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    rebeccapurple: '639',\n    red: 'f00',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    slategrey: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    wheat: 'f5deb3',\n    white: 'fff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ff0',\n    yellowgreen: '9acd32',\n  };\n};\n", "module.exports = function clearer(color) {\n  color.installMethod('clearer', function (amount) {\n    return this.alpha(isNaN(amount) ? -0.1 : -amount, true);\n  });\n};\n", "module.exports = function luminance(color) {\n  // http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\n  function channelLuminance(value) {\n    return value <= 0.03928\n      ? value / 12.92\n      : Math.pow((value + 0.055) / 1.055, 2.4);\n  }\n\n  color.installMethod('luminance', function () {\n    var rgb = this.rgb();\n    return (\n      0.2126 * channelLuminance(rgb._red) +\n      0.7152 * channelLuminance(rgb._green) +\n      0.0722 * channelLuminance(rgb._blue)\n    );\n  });\n};\n", "module.exports = function contrast(color) {\n  // http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\n  color.use(require('./luminance'));\n\n  color.installMethod('contrast', function (color2) {\n    var lum1 = this.luminance();\n    var lum2 = color2.luminance();\n    if (lum1 > lum2) {\n      return (lum1 + 0.05) / (lum2 + 0.05);\n    }\n\n    return (lum2 + 0.05) / (lum1 + 0.05);\n  });\n};\n", "module.exports = function darken(color) {\n  color.use(require('../HSL'));\n\n  color.installMethod('darken', function (amount) {\n    return this.lightness(isNaN(amount) ? -0.1 : -amount, true);\n  });\n};\n", "module.exports = function desaturate(color) {\n  color.use(require('../HSL'));\n\n  color.installMethod('desaturate', function (amount) {\n    return this.saturation(isNaN(amount) ? -0.1 : -amount, true);\n  });\n};\n", "module.exports = function grayscale(color) {\n  function gs() {\n    /* jslint strict:false */\n    var rgb = this.rgb();\n    var val = rgb._red * 0.3 + rgb._green * 0.59 + rgb._blue * 0.11;\n\n    return new color.RGB(val, val, val, rgb._alpha);\n  }\n\n  color.installMethod('greyscale', gs).installMethod('grayscale', gs);\n};\n", "module.exports = function isDark(color) {\n  color.installMethod('isDark', function () {\n    var rgb = this.rgb();\n\n    // YIQ equation from http://24ways.org/2010/calculating-color-contrast\n    var yiq =\n      (rgb._red * 255 * 299 + rgb._green * 255 * 587 + rgb._blue * 255 * 114) /\n      1000;\n    return yiq < 128;\n  });\n};\n", "module.exports = function isLight(color) {\n  color.use(require('./isDark'));\n\n  color.installMethod('isLight', function () {\n    return !this.isDark();\n  });\n};\n", "module.exports = function lighten(color) {\n  color.use(require('../HSL'));\n\n  color.installMethod('lighten', function (amount) {\n    return this.lightness(isNaN(amount) ? 0.1 : amount, true);\n  });\n};\n", "module.exports = function mix(color) {\n  color.installMethod('mix', function (otherColor, weight) {\n    otherColor = color(otherColor).rgb();\n    weight = 1 - (isNaN(weight) ? 0.5 : weight);\n\n    var w = weight * 2 - 1;\n    var a = this._alpha - otherColor._alpha;\n    var weight1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2;\n    var weight2 = 1 - weight1;\n    var rgb = this.rgb();\n\n    return new color.RGB(\n      rgb._red * weight1 + otherColor._red * weight2,\n      rgb._green * weight1 + otherColor._green * weight2,\n      rgb._blue * weight1 + otherColor._blue * weight2,\n      rgb._alpha * weight + otherColor._alpha * (1 - weight)\n    );\n  });\n};\n", "module.exports = function negate(color) {\n  color.installMethod('negate', function () {\n    var rgb = this.rgb();\n    return new color.RGB(\n      1 - rgb._red,\n      1 - rgb._green,\n      1 - rgb._blue,\n      this._alpha\n    );\n  });\n};\n", "module.exports = function opaquer(color) {\n  color.installMethod('opaquer', function (amount) {\n    return this.alpha(isNaN(amount) ? 0.1 : amount, true);\n  });\n};\n", "module.exports = function rotate(color) {\n  color.use(require('../HSL'));\n\n  color.installMethod('rotate', function (degrees) {\n    return this.hue((degrees || 0) / 360, true);\n  });\n};\n", "module.exports = function saturate(color) {\n  color.use(require('../HSL'));\n\n  color.installMethod('saturate', function (amount) {\n    return this.saturation(isNaN(amount) ? 0.1 : amount, true);\n  });\n};\n", "// Adapted from http://gimp.sourcearchive.com/documentation/2.6.6-1ubuntu1/color-to-alpha_8c-source.html\n// toAlpha returns a color where the values of the argument have been converted to alpha\nmodule.exports = function toAlpha(color) {\n  color.installMethod('toAlpha', function (color) {\n    var me = this.rgb();\n    var other = color(color).rgb();\n    var epsilon = 1e-10;\n    var a = new color.RGB(0, 0, 0, me._alpha);\n    var channels = ['_red', '_green', '_blue'];\n\n    channels.forEach(function (channel) {\n      if (me[channel] < epsilon) {\n        a[channel] = me[channel];\n      } else if (me[channel] > other[channel]) {\n        a[channel] = (me[channel] - other[channel]) / (1 - other[channel]);\n      } else if (me[channel] > other[channel]) {\n        a[channel] = (other[channel] - me[channel]) / other[channel];\n      } else {\n        a[channel] = 0;\n      }\n    });\n\n    if (a._red > a._green) {\n      if (a._red > a._blue) {\n        me._alpha = a._red;\n      } else {\n        me._alpha = a._blue;\n      }\n    } else if (a._green > a._blue) {\n      me._alpha = a._green;\n    } else {\n      me._alpha = a._blue;\n    }\n\n    if (me._alpha < epsilon) {\n      return me;\n    }\n\n    channels.forEach(function (channel) {\n      me[channel] = (me[channel] - other[channel]) / me._alpha + other[channel];\n    });\n    me._alpha *= a._alpha;\n\n    return me;\n  });\n};\n", "module.exports = require('./lib/color')\n  .use(require('./lib/XYZ'))\n  .use(require('./lib/LAB'))\n  .use(require('./lib/HSV'))\n  .use(require('./lib/HSL'))\n  .use(require('./lib/CMYK'))\n\n  // Convenience functions\n  .use(require('./lib/plugins/namedColors'))\n  .use(require('./lib/plugins/clearer.js'))\n  .use(require('./lib/plugins/contrast.js'))\n  .use(require('./lib/plugins/darken.js'))\n  .use(require('./lib/plugins/desaturate.js'))\n  .use(require('./lib/plugins/grayscale.js'))\n  .use(require('./lib/plugins/isDark.js'))\n  .use(require('./lib/plugins/isLight.js'))\n  .use(require('./lib/plugins/lighten.js'))\n  .use(require('./lib/plugins/luminance.js'))\n  .use(require('./lib/plugins/mix.js'))\n  .use(require('./lib/plugins/negate.js'))\n  .use(require('./lib/plugins/opaquer.js'))\n  .use(require('./lib/plugins/rotate.js'))\n  .use(require('./lib/plugins/saturate.js'))\n  .use(require('./lib/plugins/toAlpha.js'));\n"],
  "mappings": "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",
  "names": ["propertyName", "color"]
}
